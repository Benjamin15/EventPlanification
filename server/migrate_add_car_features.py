#!/usr/bin/env python3
"""
Migration pour ajouter les nouvelles fonctionnalit√©s de voiture:
- actual_fuel_cost: co√ªt r√©el d'essence apr√®s le trajet
- driver_id: ID du conducteur participant
"""

import sqlite3
import os
from pathlib import Path

# Chemin vers la base de donn√©es
DB_PATH = Path(__file__).parent / "chalet_vibe.db"

def add_car_features():
    """Ajouter les nouvelles colonnes √† la table cars"""
    
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    try:
        print("üîÑ Ajout des nouvelles fonctionnalit√©s de voiture...")
        
        # V√©rifier les colonnes existantes
        cursor.execute("PRAGMA table_info(cars)")
        existing_columns = [col[1] for col in cursor.fetchall()]
        print(f"Colonnes existantes dans cars: {existing_columns}")
        
        # Ajouter actual_fuel_cost si elle n'existe pas
        if 'actual_fuel_cost' not in existing_columns:
            print("Ajout de la colonne actual_fuel_cost...")
            cursor.execute("ALTER TABLE cars ADD COLUMN actual_fuel_cost REAL DEFAULT 0.0")
            print("‚úÖ Colonne actual_fuel_cost ajout√©e avec succ√®s!")
        else:
            print("‚úÖ La colonne actual_fuel_cost existe d√©j√†")
        
        # Ajouter driver_id si elle n'existe pas
        if 'driver_id' not in existing_columns:
            print("Ajout de la colonne driver_id...")
            cursor.execute("ALTER TABLE cars ADD COLUMN driver_id INTEGER DEFAULT NULL")
            print("‚úÖ Colonne driver_id ajout√©e avec succ√®s!")
        else:
            print("‚úÖ La colonne driver_id existe d√©j√†")
        
        # Commit les changements
        conn.commit()
        
        # V√©rifier la nouvelle structure
        cursor.execute("PRAGMA table_info(cars)")
        new_columns_info = cursor.fetchall()
        print("\nüìã Nouvelle structure de la table cars:")
        for col in new_columns_info:
            print(f"  - {col[1]} ({col[2]})")
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la migration: {e}")
        conn.rollback()
        raise
    finally:
        conn.close()

if __name__ == "__main__":
    add_car_features()
    print("\nüéâ Migration termin√©e avec succ√®s!")
    print("Les nouvelles fonctionnalit√©s de voiture sont maintenant disponibles :")
    print("  - actual_fuel_cost : Co√ªt r√©el d'essence apr√®s le trajet")
    print("  - driver_id : S√©lection du conducteur parmi les participants")
